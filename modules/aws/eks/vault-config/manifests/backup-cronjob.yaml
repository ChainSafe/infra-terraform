apiVersion: batch/v1
kind: CronJob
metadata:
  name: vault-snapshot-cronjob
  namespace: ${namespace}
spec:
  schedule: "@every 12h"
  concurrencyPolicy: "Forbid"
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            vault.hashicorp.com/agent-inject: "true"
            vault.hashicorp.com/agent-pre-populate-only : "true"
            vault.hashicorp.com/auth-path: "${auth_path}"
            vault.hashicorp.com/role: "${role}"
            vault.hashicorp.com/agent-inject-token: "true"
        spec:
          serviceAccountName: ${service_account_name}
          volumes:
            - name: share
              emptyDir: {}
          securityContext:
            runAsNonRoot: true
          containers:
            - name: snapshot
              image: vault:1.11.3
              imagePullPolicy: IfNotPresent
              command:
                - /bin/sh
              args:
                - -ec
                - |
                  export VAULT_TOKEN=$(cat /vault/secrets/token)
                  vault operator raft snapshot save /share/vault-raft.snap;
              env:
                - name: VAULT_ADDR
                  value: http://vault-server-active.${namespace}:8200
              volumeMounts:
                - mountPath: /share
                  name: share
              securityContext:
                allowPrivilegeEscalation: false
                readOnlyRootFilesystem: true
            - name: upload
              image: docker.io/amazon/aws-cli:2.28.25
              imagePullPolicy: IfNotPresent
              command:
                - /bin/sh
              args:
                - -ec
                - |
                  until [ -f /share/vault-raft.snap ]; do sleep 5; done;
                  aws s3 cp /share/vault-raft.snap s3://${aws_s3_bucket}/vault_raft_$(date +"%Y%m%d_%H%M%S").snapshot;
              volumeMounts:
                - mountPath: /share
                  name: share
              securityContext:
                allowPrivilegeEscalation: false
                readOnlyRootFilesystem: true
          restartPolicy: OnFailure
