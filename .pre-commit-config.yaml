repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      - id: trailing-whitespace
      - id: mixed-line-ending
        args: [ --fix=lf ]
      - id: check-merge-conflict
      - id: end-of-file-fixer
      - id: check-added-large-files
      - id: detect-aws-credentials
        args: [ --allow-missing-credentials ]

  - repo: local
    hooks:
      - id: check-local-sources
        name: Check for local sources
        entry: 'source\s+=\s+".*terraform/modules.*"'
        language: pygrep
        types: [ text ]
      - id: encrypt-secrets
        name: Encrypt secrets.auto.tfvars
        language: script
        entry: .pre-commit/sops-encrypt.sh
        files: secrets\.tfvars\.yaml$
        exclude: /(\.terraform|\.terragrunt-cache|\.external_modules|examples)/

  - repo: https://github.com/gruntwork-io/pre-commit
    rev: v0.1.30
    hooks:
      - id: terragrunt-hclfmt
        files: (\.hcl)$
        exclude: (examples/terragrunt\.hcl)$

  - repo: https://github.com/antonbabenko/pre-commit-terraform
    rev: v1.100.0
    hooks:
      - id: terraform_fmt
        name: Format terraform files.
        types: [ terraform ]

      - id: terraform_validate
        types: [ terraform ]
        exclude: (^\.global/|examples/|projects/|.terraform/)
        args:
          - --hook-config=--retry-once-with-cleanup=true
          - --tf-init-args=-upgrade

      - id: terraform_providers_lock
        types: [ terraform ]
        exclude: (^\.global/|examples/|projects/|.terraform/)
        args:
          - --hook-config=--mode=only-check-is-current-lockfile-cross-platform

      - id: terraform_tflint
        name: Terraform validate with TFLint.
        exclude: (^\.global/|examples/|projects/)
        args:
          - --hook-config=--delegate-chdir
          - >
            --args=
              --config=__GIT_WORKING_DIR__/.tflint.hcl

      - id: terraform_trivy
        name: Terraform validate with Trivy.
        types: [ terraform ]
        args:
          - >
            --args=
              --config=__GIT_WORKING_DIR__/.trivy.yml
              --ignorefile=__GIT_WORKING_DIR__/.trivyignore.yaml
              --tf-exclude-downloaded-modules

      - id: terraform_checkov
        name: Terraform validate with checkov
        types: [ terraform ]
        args:
          - >
            --args=
              --config-file __GIT_WORKING_DIR__/.checkov.yml
      - id: terraform_docs
        name: Generate terraform documentation.
        files: (variables.tf)$
        args:
          - --args=--config=.terraform-docs.yml
          - --hook-config=--create-file-if-not-exist=true
#      - id: tfupdate
#        name: Autoupdate Terraform versions
#        types: [ terraform ]
